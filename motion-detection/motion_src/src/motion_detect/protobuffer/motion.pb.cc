// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: motion.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "motion.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace motion {

namespace {

const ::google::protobuf::Descriptor* Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Message_reflection_ = NULL;
const ::google::protobuf::Descriptor* Message_Instance_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Message_Instance_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Message_ActionType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Message_SocketType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_motion_2eproto() {
  protobuf_AddDesc_motion_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "motion.proto");
  GOOGLE_CHECK(file != NULL);
  Message_descriptor_ = file->message_type(0);
  static const int Message_offsets_[16] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, data_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, data_amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, data_total_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, serverip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, clientip_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, payload_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, recognizing_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, instance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, storeimage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, storecrop_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, regioncoords_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, starttime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, sotype_),
  };
  Message_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Message_descriptor_,
      Message::default_instance_,
      Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Message));
  Message_Instance_descriptor_ = Message_descriptor_->nested_type(0);
  static const int Message_Instance_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Instance, idinstance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Instance, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Instance, filepath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Instance, instancestart_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Instance, instanceend_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Instance, regionfilename_),
  };
  Message_Instance_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Message_Instance_descriptor_,
      Message_Instance::default_instance_,
      Message_Instance_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Instance, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message_Instance, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Message_Instance));
  Message_ActionType_descriptor_ = Message_descriptor_->enum_type(0);
  Message_SocketType_descriptor_ = Message_descriptor_->enum_type(1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_motion_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Message_descriptor_, &Message::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Message_Instance_descriptor_, &Message_Instance::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_motion_2eproto() {
  delete Message::default_instance_;
  delete Message_reflection_;
  delete Message_Instance::default_instance_;
  delete Message_Instance_reflection_;
}

void protobuf_AddDesc_motion_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014motion.proto\022\006motion\"\302\010\n\007Message\0220\n\004ty"
    "pe\030\001 \002(\0162\032.motion.Message.ActionType:\006EN"
    "GAGE\022\014\n\004time\030\002 \001(\t\022\014\n\004data\030\003 \001(\014\022\023\n\013data"
    "_amount\030\004 \001(\005\022\022\n\ndata_total\030\005 \001(\005\022\020\n\010ser"
    "verip\030\006 \001(\t\022\020\n\010clientip\030\007 \001(\t\022\017\n\007payload"
    "\030\010 \001(\t\022\023\n\013recognizing\030\013 \001(\010\022*\n\010instance\030"
    "\014 \003(\0132\030.motion.Message.Instance\022\022\n\nstore"
    "image\030\r \001(\010\022\021\n\tstorecrop\030\016 \001(\010\022\014\n\004code\030\017"
    " \001(\t\022\024\n\014regioncoords\030\020 \001(\t\022\021\n\tstarttime\030"
    "\021 \001(\t\022*\n\006sotype\030\022 \001(\0162\032.motion.Message.S"
    "ocketType\032\204\001\n\010Instance\022\022\n\nidinstance\030\001 \002"
    "(\005\022\016\n\006amount\030\004 \001(\t\022\020\n\010filepath\030\005 \001(\t\022\025\n\r"
    "instancestart\030\006 \001(\t\022\023\n\013instanceend\030\007 \001(\t"
    "\022\026\n\016regionfilename\030\t \001(\t\"\205\002\n\nActionType\022"
    "\013\n\006ENGAGE\020\350\007\022\016\n\tREC_START\020\352\007\022\020\n\013REC_RUNN"
    "ING\020\353\007\022\r\n\010REC_STOP\020\354\007\022\r\n\010UNENGAGE\020\355\007\022\r\n\010"
    "GET_TIME\020\356\007\022\r\n\010SET_TIME\020\357\007\022\r\n\010TIME_SET\020\360"
    "\007\022\017\n\nSTRM_START\020\361\007\022\016\n\tSTRM_STOP\020\362\007\022\021\n\014TA"
    "KE_PICTURE\020\363\007\022\020\n\013DISSCONNECT\020\364\007\022\020\n\013RESPO"
    "NSE_OK\020\310\001\022\022\n\rRESPONSE_NEXT\020\311\001\022\021\n\014RESPONS"
    "E_END\020\312\001\"\260\002\n\nSocketType\022\031\n\025SOCKET_PROTO_"
    "TOSTRING\020\n\022\030\n\024SOCKET_PROTO_TOARRAY\020\013\022\025\n\021"
    "SOCKET_PLAIN_TEXT\020\014\022\024\n\020SPLITTED_MESSAGE\020"
    "\r\022\022\n\016SINGLE_MESSAGE\020\016\022\036\n\030SOCKET_BUFFER_S"
    "MALL_SIZE\020\320\206\003\022\037\n\031SOCKET_BUFFER_MEDIUM_SI"
    "ZE\020\360\223\t\022\034\n\026SOCKET_BUFFER_BIG_SIZE\020\300\232\014\022\022\n\r"
    "TCP_ECHO_PORT\020\222\'\022\027\n\022TCP_STREAMING_PORT\020\234"
    "\'\022\r\n\010UDP_PORT\020\246\'\022\021\n\014TCP_MSG_PORT\020\260\'", 1115);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "motion.proto", &protobuf_RegisterTypes);
  Message::default_instance_ = new Message();
  Message_Instance::default_instance_ = new Message_Instance();
  Message::default_instance_->InitAsDefaultInstance();
  Message_Instance::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_motion_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_motion_2eproto {
  StaticDescriptorInitializer_motion_2eproto() {
    protobuf_AddDesc_motion_2eproto();
  }
} static_descriptor_initializer_motion_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* Message_ActionType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_ActionType_descriptor_;
}
bool Message_ActionType_IsValid(int value) {
  switch(value) {
    case 200:
    case 201:
    case 202:
    case 1000:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
    case 1007:
    case 1008:
    case 1009:
    case 1010:
    case 1011:
    case 1012:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Message_ActionType Message::ENGAGE;
const Message_ActionType Message::REC_START;
const Message_ActionType Message::REC_RUNNING;
const Message_ActionType Message::REC_STOP;
const Message_ActionType Message::UNENGAGE;
const Message_ActionType Message::GET_TIME;
const Message_ActionType Message::SET_TIME;
const Message_ActionType Message::TIME_SET;
const Message_ActionType Message::STRM_START;
const Message_ActionType Message::STRM_STOP;
const Message_ActionType Message::TAKE_PICTURE;
const Message_ActionType Message::DISSCONNECT;
const Message_ActionType Message::RESPONSE_OK;
const Message_ActionType Message::RESPONSE_NEXT;
const Message_ActionType Message::RESPONSE_END;
const Message_ActionType Message::ActionType_MIN;
const Message_ActionType Message::ActionType_MAX;
const int Message::ActionType_ARRAYSIZE;
#endif  // _MSC_VER
const ::google::protobuf::EnumDescriptor* Message_SocketType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_SocketType_descriptor_;
}
bool Message_SocketType_IsValid(int value) {
  switch(value) {
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 5010:
    case 5020:
    case 5030:
    case 5040:
    case 50000:
    case 150000:
    case 200000:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Message_SocketType Message::SOCKET_PROTO_TOSTRING;
const Message_SocketType Message::SOCKET_PROTO_TOARRAY;
const Message_SocketType Message::SOCKET_PLAIN_TEXT;
const Message_SocketType Message::SPLITTED_MESSAGE;
const Message_SocketType Message::SINGLE_MESSAGE;
const Message_SocketType Message::SOCKET_BUFFER_SMALL_SIZE;
const Message_SocketType Message::SOCKET_BUFFER_MEDIUM_SIZE;
const Message_SocketType Message::SOCKET_BUFFER_BIG_SIZE;
const Message_SocketType Message::TCP_ECHO_PORT;
const Message_SocketType Message::TCP_STREAMING_PORT;
const Message_SocketType Message::UDP_PORT;
const Message_SocketType Message::TCP_MSG_PORT;
const Message_SocketType Message::SocketType_MIN;
const Message_SocketType Message::SocketType_MAX;
const int Message::SocketType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Message_Instance::kIdinstanceFieldNumber;
const int Message_Instance::kAmountFieldNumber;
const int Message_Instance::kFilepathFieldNumber;
const int Message_Instance::kInstancestartFieldNumber;
const int Message_Instance::kInstanceendFieldNumber;
const int Message_Instance::kRegionfilenameFieldNumber;
#endif  // !_MSC_VER

Message_Instance::Message_Instance()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:motion.Message.Instance)
}

void Message_Instance::InitAsDefaultInstance() {
}

Message_Instance::Message_Instance(const Message_Instance& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:motion.Message.Instance)
}

void Message_Instance::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  idinstance_ = 0;
  amount_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filepath_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instancestart_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instanceend_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regionfilename_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Message_Instance::~Message_Instance() {
  // @@protoc_insertion_point(destructor:motion.Message.Instance)
  SharedDtor();
}

void Message_Instance::SharedDtor() {
  if (amount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete amount_;
  }
  if (filepath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filepath_;
  }
  if (instancestart_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete instancestart_;
  }
  if (instanceend_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete instanceend_;
  }
  if (regionfilename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete regionfilename_;
  }
  if (this != default_instance_) {
  }
}

void Message_Instance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message_Instance::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_Instance_descriptor_;
}

const Message_Instance& Message_Instance::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_motion_2eproto();
  return *default_instance_;
}

Message_Instance* Message_Instance::default_instance_ = NULL;

Message_Instance* Message_Instance::New() const {
  return new Message_Instance;
}

void Message_Instance::Clear() {
  if (_has_bits_[0 / 32] & 63) {
    idinstance_ = 0;
    if (has_amount()) {
      if (amount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        amount_->clear();
      }
    }
    if (has_filepath()) {
      if (filepath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        filepath_->clear();
      }
    }
    if (has_instancestart()) {
      if (instancestart_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        instancestart_->clear();
      }
    }
    if (has_instanceend()) {
      if (instanceend_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        instanceend_->clear();
      }
    }
    if (has_regionfilename()) {
      if (regionfilename_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        regionfilename_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Message_Instance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:motion.Message.Instance)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 idinstance = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &idinstance_)));
          set_has_idinstance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_amount;
        break;
      }

      // optional string amount = 4;
      case 4: {
        if (tag == 34) {
         parse_amount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_amount()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->amount().data(), this->amount().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "amount");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_filepath;
        break;
      }

      // optional string filepath = 5;
      case 5: {
        if (tag == 42) {
         parse_filepath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filepath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filepath().data(), this->filepath().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "filepath");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_instancestart;
        break;
      }

      // optional string instancestart = 6;
      case 6: {
        if (tag == 50) {
         parse_instancestart:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instancestart()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->instancestart().data(), this->instancestart().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "instancestart");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_instanceend;
        break;
      }

      // optional string instanceend = 7;
      case 7: {
        if (tag == 58) {
         parse_instanceend:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instanceend()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->instanceend().data(), this->instanceend().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "instanceend");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_regionfilename;
        break;
      }

      // optional string regionfilename = 9;
      case 9: {
        if (tag == 74) {
         parse_regionfilename:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regionfilename()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->regionfilename().data(), this->regionfilename().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "regionfilename");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:motion.Message.Instance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:motion.Message.Instance)
  return false;
#undef DO_
}

void Message_Instance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:motion.Message.Instance)
  // required int32 idinstance = 1;
  if (has_idinstance()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->idinstance(), output);
  }

  // optional string amount = 4;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->amount().data(), this->amount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "amount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->amount(), output);
  }

  // optional string filepath = 5;
  if (has_filepath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filepath().data(), this->filepath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filepath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->filepath(), output);
  }

  // optional string instancestart = 6;
  if (has_instancestart()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->instancestart().data(), this->instancestart().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "instancestart");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->instancestart(), output);
  }

  // optional string instanceend = 7;
  if (has_instanceend()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->instanceend().data(), this->instanceend().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "instanceend");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->instanceend(), output);
  }

  // optional string regionfilename = 9;
  if (has_regionfilename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regionfilename().data(), this->regionfilename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "regionfilename");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->regionfilename(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:motion.Message.Instance)
}

::google::protobuf::uint8* Message_Instance::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:motion.Message.Instance)
  // required int32 idinstance = 1;
  if (has_idinstance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->idinstance(), target);
  }

  // optional string amount = 4;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->amount().data(), this->amount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "amount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->amount(), target);
  }

  // optional string filepath = 5;
  if (has_filepath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filepath().data(), this->filepath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filepath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->filepath(), target);
  }

  // optional string instancestart = 6;
  if (has_instancestart()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->instancestart().data(), this->instancestart().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "instancestart");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->instancestart(), target);
  }

  // optional string instanceend = 7;
  if (has_instanceend()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->instanceend().data(), this->instanceend().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "instanceend");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->instanceend(), target);
  }

  // optional string regionfilename = 9;
  if (has_regionfilename()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regionfilename().data(), this->regionfilename().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "regionfilename");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->regionfilename(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:motion.Message.Instance)
  return target;
}

int Message_Instance::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 idinstance = 1;
    if (has_idinstance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->idinstance());
    }

    // optional string amount = 4;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->amount());
    }

    // optional string filepath = 5;
    if (has_filepath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filepath());
    }

    // optional string instancestart = 6;
    if (has_instancestart()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->instancestart());
    }

    // optional string instanceend = 7;
    if (has_instanceend()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->instanceend());
    }

    // optional string regionfilename = 9;
    if (has_regionfilename()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->regionfilename());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message_Instance::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Message_Instance* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Message_Instance*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Message_Instance::MergeFrom(const Message_Instance& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_idinstance()) {
      set_idinstance(from.idinstance());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
    if (from.has_filepath()) {
      set_filepath(from.filepath());
    }
    if (from.has_instancestart()) {
      set_instancestart(from.instancestart());
    }
    if (from.has_instanceend()) {
      set_instanceend(from.instanceend());
    }
    if (from.has_regionfilename()) {
      set_regionfilename(from.regionfilename());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Message_Instance::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Instance::CopyFrom(const Message_Instance& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Instance::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Message_Instance::Swap(Message_Instance* other) {
  if (other != this) {
    std::swap(idinstance_, other->idinstance_);
    std::swap(amount_, other->amount_);
    std::swap(filepath_, other->filepath_);
    std::swap(instancestart_, other->instancestart_);
    std::swap(instanceend_, other->instanceend_);
    std::swap(regionfilename_, other->regionfilename_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Message_Instance::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Message_Instance_descriptor_;
  metadata.reflection = Message_Instance_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Message::kTypeFieldNumber;
const int Message::kTimeFieldNumber;
const int Message::kDataFieldNumber;
const int Message::kDataAmountFieldNumber;
const int Message::kDataTotalFieldNumber;
const int Message::kServeripFieldNumber;
const int Message::kClientipFieldNumber;
const int Message::kPayloadFieldNumber;
const int Message::kRecognizingFieldNumber;
const int Message::kInstanceFieldNumber;
const int Message::kStoreimageFieldNumber;
const int Message::kStorecropFieldNumber;
const int Message::kCodeFieldNumber;
const int Message::kRegioncoordsFieldNumber;
const int Message::kStarttimeFieldNumber;
const int Message::kSotypeFieldNumber;
#endif  // !_MSC_VER

Message::Message()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:motion.Message)
}

void Message::InitAsDefaultInstance() {
}

Message::Message(const Message& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:motion.Message)
}

void Message::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 1000;
  time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_amount_ = 0;
  data_total_ = 0;
  serverip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clientip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  recognizing_ = false;
  storeimage_ = false;
  storecrop_ = false;
  code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  regioncoords_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  starttime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sotype_ = 10;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:motion.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  if (time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete time_;
  }
  if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete data_;
  }
  if (serverip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete serverip_;
  }
  if (clientip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete clientip_;
  }
  if (payload_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete payload_;
  }
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete code_;
  }
  if (regioncoords_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete regioncoords_;
  }
  if (starttime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete starttime_;
  }
  if (this != default_instance_) {
  }
}

void Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_descriptor_;
}

const Message& Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_motion_2eproto();
  return *default_instance_;
}

Message* Message::default_instance_ = NULL;

Message* Message::New() const {
  return new Message;
}

void Message::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Message*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 255) {
    type_ = 1000;
    if (has_time()) {
      if (time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        time_->clear();
      }
    }
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        data_->clear();
      }
    }
    data_amount_ = 0;
    data_total_ = 0;
    if (has_serverip()) {
      if (serverip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        serverip_->clear();
      }
    }
    if (has_clientip()) {
      if (clientip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        clientip_->clear();
      }
    }
    if (has_payload()) {
      if (payload_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        payload_->clear();
      }
    }
  }
  if (_has_bits_[8 / 32] & 64768) {
    ZR_(recognizing_, storecrop_);
    if (has_code()) {
      if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        code_->clear();
      }
    }
    if (has_regioncoords()) {
      if (regioncoords_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        regioncoords_->clear();
      }
    }
    if (has_starttime()) {
      if (starttime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        starttime_->clear();
      }
    }
    sotype_ = 10;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  instance_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:motion.Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .motion.Message.ActionType type = 1 [default = ENGAGE];
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::motion::Message_ActionType_IsValid(value)) {
            set_type(static_cast< ::motion::Message_ActionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_time;
        break;
      }

      // optional string time = 2;
      case 2: {
        if (tag == 18) {
         parse_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->time().data(), this->time().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "time");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_data;
        break;
      }

      // optional bytes data = 3;
      case 3: {
        if (tag == 26) {
         parse_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_data_amount;
        break;
      }

      // optional int32 data_amount = 4;
      case 4: {
        if (tag == 32) {
         parse_data_amount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_amount_)));
          set_has_data_amount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_data_total;
        break;
      }

      // optional int32 data_total = 5;
      case 5: {
        if (tag == 40) {
         parse_data_total:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &data_total_)));
          set_has_data_total();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_serverip;
        break;
      }

      // optional string serverip = 6;
      case 6: {
        if (tag == 50) {
         parse_serverip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_serverip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->serverip().data(), this->serverip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "serverip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_clientip;
        break;
      }

      // optional string clientip = 7;
      case 7: {
        if (tag == 58) {
         parse_clientip:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_clientip()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->clientip().data(), this->clientip().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "clientip");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_payload;
        break;
      }

      // optional string payload = 8;
      case 8: {
        if (tag == 66) {
         parse_payload:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_payload()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->payload().data(), this->payload().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "payload");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(88)) goto parse_recognizing;
        break;
      }

      // optional bool recognizing = 11;
      case 11: {
        if (tag == 88) {
         parse_recognizing:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &recognizing_)));
          set_has_recognizing();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_instance;
        break;
      }

      // repeated .motion.Message.Instance instance = 12;
      case 12: {
        if (tag == 98) {
         parse_instance:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_instance()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_instance;
        if (input->ExpectTag(104)) goto parse_storeimage;
        break;
      }

      // optional bool storeimage = 13;
      case 13: {
        if (tag == 104) {
         parse_storeimage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &storeimage_)));
          set_has_storeimage();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(112)) goto parse_storecrop;
        break;
      }

      // optional bool storecrop = 14;
      case 14: {
        if (tag == 112) {
         parse_storecrop:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &storecrop_)));
          set_has_storecrop();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_code;
        break;
      }

      // optional string code = 15;
      case 15: {
        if (tag == 122) {
         parse_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "code");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_regioncoords;
        break;
      }

      // optional string regioncoords = 16;
      case 16: {
        if (tag == 130) {
         parse_regioncoords:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_regioncoords()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->regioncoords().data(), this->regioncoords().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "regioncoords");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_starttime;
        break;
      }

      // optional string starttime = 17;
      case 17: {
        if (tag == 138) {
         parse_starttime:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_starttime()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->starttime().data(), this->starttime().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "starttime");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_sotype;
        break;
      }

      // optional .motion.Message.SocketType sotype = 18;
      case 18: {
        if (tag == 144) {
         parse_sotype:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::motion::Message_SocketType_IsValid(value)) {
            set_sotype(static_cast< ::motion::Message_SocketType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(18, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:motion.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:motion.Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:motion.Message)
  // required .motion.Message.ActionType type = 1 [default = ENGAGE];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional string time = 2;
  if (has_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->time(), output);
  }

  // optional bytes data = 3;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  // optional int32 data_amount = 4;
  if (has_data_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->data_amount(), output);
  }

  // optional int32 data_total = 5;
  if (has_data_total()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->data_total(), output);
  }

  // optional string serverip = 6;
  if (has_serverip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serverip().data(), this->serverip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serverip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->serverip(), output);
  }

  // optional string clientip = 7;
  if (has_clientip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientip().data(), this->clientip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "clientip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->clientip(), output);
  }

  // optional string payload = 8;
  if (has_payload()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->payload().data(), this->payload().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "payload");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->payload(), output);
  }

  // optional bool recognizing = 11;
  if (has_recognizing()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->recognizing(), output);
  }

  // repeated .motion.Message.Instance instance = 12;
  for (int i = 0; i < this->instance_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->instance(i), output);
  }

  // optional bool storeimage = 13;
  if (has_storeimage()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->storeimage(), output);
  }

  // optional bool storecrop = 14;
  if (has_storecrop()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14, this->storecrop(), output);
  }

  // optional string code = 15;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      15, this->code(), output);
  }

  // optional string regioncoords = 16;
  if (has_regioncoords()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regioncoords().data(), this->regioncoords().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "regioncoords");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->regioncoords(), output);
  }

  // optional string starttime = 17;
  if (has_starttime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->starttime().data(), this->starttime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "starttime");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->starttime(), output);
  }

  // optional .motion.Message.SocketType sotype = 18;
  if (has_sotype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      18, this->sotype(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:motion.Message)
}

::google::protobuf::uint8* Message::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:motion.Message)
  // required .motion.Message.ActionType type = 1 [default = ENGAGE];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional string time = 2;
  if (has_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->time(), target);
  }

  // optional bytes data = 3;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  // optional int32 data_amount = 4;
  if (has_data_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->data_amount(), target);
  }

  // optional int32 data_total = 5;
  if (has_data_total()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->data_total(), target);
  }

  // optional string serverip = 6;
  if (has_serverip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->serverip().data(), this->serverip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "serverip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->serverip(), target);
  }

  // optional string clientip = 7;
  if (has_clientip()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->clientip().data(), this->clientip().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "clientip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->clientip(), target);
  }

  // optional string payload = 8;
  if (has_payload()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->payload().data(), this->payload().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "payload");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->payload(), target);
  }

  // optional bool recognizing = 11;
  if (has_recognizing()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->recognizing(), target);
  }

  // repeated .motion.Message.Instance instance = 12;
  for (int i = 0; i < this->instance_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->instance(i), target);
  }

  // optional bool storeimage = 13;
  if (has_storeimage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->storeimage(), target);
  }

  // optional bool storecrop = 14;
  if (has_storecrop()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14, this->storecrop(), target);
  }

  // optional string code = 15;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        15, this->code(), target);
  }

  // optional string regioncoords = 16;
  if (has_regioncoords()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->regioncoords().data(), this->regioncoords().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "regioncoords");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->regioncoords(), target);
  }

  // optional string starttime = 17;
  if (has_starttime()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->starttime().data(), this->starttime().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "starttime");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->starttime(), target);
  }

  // optional .motion.Message.SocketType sotype = 18;
  if (has_sotype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      18, this->sotype(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:motion.Message)
  return target;
}

int Message::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .motion.Message.ActionType type = 1 [default = ENGAGE];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional string time = 2;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->time());
    }

    // optional bytes data = 3;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

    // optional int32 data_amount = 4;
    if (has_data_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data_amount());
    }

    // optional int32 data_total = 5;
    if (has_data_total()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->data_total());
    }

    // optional string serverip = 6;
    if (has_serverip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->serverip());
    }

    // optional string clientip = 7;
    if (has_clientip()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->clientip());
    }

    // optional string payload = 8;
    if (has_payload()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->payload());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional bool recognizing = 11;
    if (has_recognizing()) {
      total_size += 1 + 1;
    }

    // optional bool storeimage = 13;
    if (has_storeimage()) {
      total_size += 1 + 1;
    }

    // optional bool storecrop = 14;
    if (has_storecrop()) {
      total_size += 1 + 1;
    }

    // optional string code = 15;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

    // optional string regioncoords = 16;
    if (has_regioncoords()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->regioncoords());
    }

    // optional string starttime = 17;
    if (has_starttime()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->starttime());
    }

    // optional .motion.Message.SocketType sotype = 18;
    if (has_sotype()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->sotype());
    }

  }
  // repeated .motion.Message.Instance instance = 12;
  total_size += 1 * this->instance_size();
  for (int i = 0; i < this->instance_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->instance(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Message* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Message*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  instance_.MergeFrom(from.instance_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_data()) {
      set_data(from.data());
    }
    if (from.has_data_amount()) {
      set_data_amount(from.data_amount());
    }
    if (from.has_data_total()) {
      set_data_total(from.data_total());
    }
    if (from.has_serverip()) {
      set_serverip(from.serverip());
    }
    if (from.has_clientip()) {
      set_clientip(from.clientip());
    }
    if (from.has_payload()) {
      set_payload(from.payload());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has_recognizing()) {
      set_recognizing(from.recognizing());
    }
    if (from.has_storeimage()) {
      set_storeimage(from.storeimage());
    }
    if (from.has_storecrop()) {
      set_storecrop(from.storecrop());
    }
    if (from.has_code()) {
      set_code(from.code());
    }
    if (from.has_regioncoords()) {
      set_regioncoords(from.regioncoords());
    }
    if (from.has_starttime()) {
      set_starttime(from.starttime());
    }
    if (from.has_sotype()) {
      set_sotype(from.sotype());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->instance())) return false;
  return true;
}

void Message::Swap(Message* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(time_, other->time_);
    std::swap(data_, other->data_);
    std::swap(data_amount_, other->data_amount_);
    std::swap(data_total_, other->data_total_);
    std::swap(serverip_, other->serverip_);
    std::swap(clientip_, other->clientip_);
    std::swap(payload_, other->payload_);
    std::swap(recognizing_, other->recognizing_);
    instance_.Swap(&other->instance_);
    std::swap(storeimage_, other->storeimage_);
    std::swap(storecrop_, other->storecrop_);
    std::swap(code_, other->code_);
    std::swap(regioncoords_, other->regioncoords_);
    std::swap(starttime_, other->starttime_);
    std::swap(sotype_, other->sotype_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Message_descriptor_;
  metadata.reflection = Message_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace motion

// @@protoc_insertion_point(global_scope)
