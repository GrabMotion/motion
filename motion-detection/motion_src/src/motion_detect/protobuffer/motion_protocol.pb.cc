// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: motion_protocol.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "motion_protocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace detection {

namespace {

const ::google::protobuf::Descriptor* Motion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Motion_reflection_ = NULL;
const ::google::protobuf::Descriptor* Motion_Action_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Motion_Action_reflection_ = NULL;
const ::google::protobuf::Descriptor* Motion_Recognition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Motion_Recognition_reflection_ = NULL;
const ::google::protobuf::Descriptor* Motion_Instance_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Motion_Instance_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Motion_ActionType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Message_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_motion_5fprotocol_2eproto() {
  protobuf_AddDesc_motion_5fprotocol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "motion_protocol.proto");
  GOOGLE_CHECK(file != NULL);
  Motion_descriptor_ = file->message_type(0);
  static const int Motion_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motion, idmotion_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motion, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motion, code_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motion, action_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motion, instance_),
  };
  Motion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Motion_descriptor_,
      Motion::default_instance_,
      Motion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Motion));
  Motion_Action_descriptor_ = Motion_descriptor_->nested_type(0);
  static const int Motion_Action_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motion_Action, idaction_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motion_Action, type_),
  };
  Motion_Action_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Motion_Action_descriptor_,
      Motion_Action::default_instance_,
      Motion_Action_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motion_Action, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motion_Action, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Motion_Action));
  Motion_Recognition_descriptor_ = Motion_descriptor_->nested_type(1);
  static const int Motion_Recognition_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motion_Recognition, instance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motion_Recognition, storeimage_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motion_Recognition, sendamount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motion_Recognition, sendfilepath_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motion_Recognition, amount_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motion_Recognition, filepath_),
  };
  Motion_Recognition_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Motion_Recognition_descriptor_,
      Motion_Recognition::default_instance_,
      Motion_Recognition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motion_Recognition, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motion_Recognition, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Motion_Recognition));
  Motion_Instance_descriptor_ = Motion_descriptor_->nested_type(2);
  static const int Motion_Instance_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motion_Instance, idinstance_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motion_Instance, start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motion_Instance, end_),
  };
  Motion_Instance_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Motion_Instance_descriptor_,
      Motion_Instance::default_instance_,
      Motion_Instance_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motion_Instance, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Motion_Instance, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Motion_Instance));
  Motion_ActionType_descriptor_ = Motion_descriptor_->enum_type(0);
  Message_descriptor_ = file->message_type(1);
  static const int Message_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, motion_),
  };
  Message_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Message_descriptor_,
      Message::default_instance_,
      Message_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Message));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_motion_5fprotocol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Motion_descriptor_, &Motion::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Motion_Action_descriptor_, &Motion_Action::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Motion_Recognition_descriptor_, &Motion_Recognition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Motion_Instance_descriptor_, &Motion_Instance::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Message_descriptor_, &Message::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_motion_5fprotocol_2eproto() {
  delete Motion::default_instance_;
  delete Motion_reflection_;
  delete Motion_Action::default_instance_;
  delete Motion_Action_reflection_;
  delete Motion_Recognition::default_instance_;
  delete Motion_Recognition_reflection_;
  delete Motion_Instance::default_instance_;
  delete Motion_Instance_reflection_;
  delete Message::default_instance_;
  delete Message_reflection_;
}

void protobuf_AddDesc_motion_5fprotocol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025motion_protocol.proto\022\tdetection\"\317\005\n\006M"
    "otion\022\020\n\010idMotion\030\001 \002(\005\022\014\n\004time\030\002 \001(\t\022\014\n"
    "\004code\030\003 \001(\t\022(\n\006action\030\004 \003(\0132\030.detection."
    "Motion.Action\022,\n\010instance\030\005 \003(\0132\032.detect"
    "ion.Motion.Instance\032O\n\006Action\022\020\n\010idActio"
    "n\030\001 \002(\005\0223\n\004type\030\002 \001(\0162\034.detection.Motion"
    ".ActionType:\007CONNECT\032\177\n\013Recognition\022\020\n\010i"
    "nstance\030\001 \002(\005\022\022\n\nstoreImage\030\002 \001(\010\022\022\n\nsen"
    "dAmount\030\003 \001(\010\022\024\n\014sendFilePath\030\004 \001(\010\022\016\n\006a"
    "mount\030\005 \001(\t\022\020\n\010filePath\030\006 \001(\t\032:\n\010Instanc"
    "e\022\022\n\nidInstance\030\001 \002(\005\022\r\n\005start\030\002 \002(\t\022\013\n\003"
    "end\030\003 \002(\t\"\260\002\n\nActionType\022\014\n\007CONNECT\020\350\007\022\023"
    "\n\016STOP_STREAMING\020\352\007\022\024\n\017PAUSE_STREAMING\020\353"
    "\007\022\026\n\021START_RECOGNITION\020\354\007\022\025\n\020STOP_RECOGN"
    "ITION\020\355\007\022\020\n\013DISSCONNECT\020\356\007\022\r\n\010GET_TIME\020\357"
    "\007\022\r\n\010SET_TIME\020\360\007\022\r\n\010TIME_SET\020\361\007\022\024\n\017AMOUN"
    "T_DETECTED\020\362\007\022\024\n\017FILE_RECOGNIZED\020\363\007\022\022\n\rT"
    "CP_ECHO_PORT\020\222\'\022\r\n\010UDP_PORT\020\234\'\022\031\n\024STREAM"
    "ING_VIDEO_PORT\020\246\'\022\021\n\014TCP_MSG_PORT\020\260\'\",\n\007"
    "Message\022!\n\006motion\030\001 \003(\0132\021.detection.Moti"
    "on", 802);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "motion_protocol.proto", &protobuf_RegisterTypes);
  Motion::default_instance_ = new Motion();
  Motion_Action::default_instance_ = new Motion_Action();
  Motion_Recognition::default_instance_ = new Motion_Recognition();
  Motion_Instance::default_instance_ = new Motion_Instance();
  Message::default_instance_ = new Message();
  Motion::default_instance_->InitAsDefaultInstance();
  Motion_Action::default_instance_->InitAsDefaultInstance();
  Motion_Recognition::default_instance_->InitAsDefaultInstance();
  Motion_Instance::default_instance_->InitAsDefaultInstance();
  Message::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_motion_5fprotocol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_motion_5fprotocol_2eproto {
  StaticDescriptorInitializer_motion_5fprotocol_2eproto() {
    protobuf_AddDesc_motion_5fprotocol_2eproto();
  }
} static_descriptor_initializer_motion_5fprotocol_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* Motion_ActionType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Motion_ActionType_descriptor_;
}
bool Motion_ActionType_IsValid(int value) {
  switch(value) {
    case 1000:
    case 1002:
    case 1003:
    case 1004:
    case 1005:
    case 1006:
    case 1007:
    case 1008:
    case 1009:
    case 1010:
    case 1011:
    case 5010:
    case 5020:
    case 5030:
    case 5040:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Motion_ActionType Motion::CONNECT;
const Motion_ActionType Motion::STOP_STREAMING;
const Motion_ActionType Motion::PAUSE_STREAMING;
const Motion_ActionType Motion::START_RECOGNITION;
const Motion_ActionType Motion::STOP_RECOGNITION;
const Motion_ActionType Motion::DISSCONNECT;
const Motion_ActionType Motion::GET_TIME;
const Motion_ActionType Motion::SET_TIME;
const Motion_ActionType Motion::TIME_SET;
const Motion_ActionType Motion::AMOUNT_DETECTED;
const Motion_ActionType Motion::FILE_RECOGNIZED;
const Motion_ActionType Motion::TCP_ECHO_PORT;
const Motion_ActionType Motion::UDP_PORT;
const Motion_ActionType Motion::STREAMING_VIDEO_PORT;
const Motion_ActionType Motion::TCP_MSG_PORT;
const Motion_ActionType Motion::ActionType_MIN;
const Motion_ActionType Motion::ActionType_MAX;
const int Motion::ActionType_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Motion_Action::kIdActionFieldNumber;
const int Motion_Action::kTypeFieldNumber;
#endif  // !_MSC_VER

Motion_Action::Motion_Action()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:detection.Motion.Action)
}

void Motion_Action::InitAsDefaultInstance() {
}

Motion_Action::Motion_Action(const Motion_Action& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:detection.Motion.Action)
}

void Motion_Action::SharedCtor() {
  _cached_size_ = 0;
  idaction_ = 0;
  type_ = 1000;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Motion_Action::~Motion_Action() {
  // @@protoc_insertion_point(destructor:detection.Motion.Action)
  SharedDtor();
}

void Motion_Action::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Motion_Action::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Motion_Action::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Motion_Action_descriptor_;
}

const Motion_Action& Motion_Action::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_motion_5fprotocol_2eproto();
  return *default_instance_;
}

Motion_Action* Motion_Action::default_instance_ = NULL;

Motion_Action* Motion_Action::New() const {
  return new Motion_Action;
}

void Motion_Action::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    idaction_ = 0;
    type_ = 1000;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Motion_Action::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:detection.Motion.Action)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 idAction = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &idaction_)));
          set_has_idaction();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_type;
        break;
      }

      // optional .detection.Motion.ActionType type = 2 [default = CONNECT];
      case 2: {
        if (tag == 16) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::detection::Motion_ActionType_IsValid(value)) {
            set_type(static_cast< ::detection::Motion_ActionType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:detection.Motion.Action)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:detection.Motion.Action)
  return false;
#undef DO_
}

void Motion_Action::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:detection.Motion.Action)
  // required int32 idAction = 1;
  if (has_idaction()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->idaction(), output);
  }

  // optional .detection.Motion.ActionType type = 2 [default = CONNECT];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:detection.Motion.Action)
}

::google::protobuf::uint8* Motion_Action::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:detection.Motion.Action)
  // required int32 idAction = 1;
  if (has_idaction()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->idaction(), target);
  }

  // optional .detection.Motion.ActionType type = 2 [default = CONNECT];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:detection.Motion.Action)
  return target;
}

int Motion_Action::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 idAction = 1;
    if (has_idaction()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->idaction());
    }

    // optional .detection.Motion.ActionType type = 2 [default = CONNECT];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Motion_Action::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Motion_Action* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Motion_Action*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Motion_Action::MergeFrom(const Motion_Action& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_idaction()) {
      set_idaction(from.idaction());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Motion_Action::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Motion_Action::CopyFrom(const Motion_Action& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Motion_Action::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Motion_Action::Swap(Motion_Action* other) {
  if (other != this) {
    std::swap(idaction_, other->idaction_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Motion_Action::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Motion_Action_descriptor_;
  metadata.reflection = Motion_Action_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Motion_Recognition::kInstanceFieldNumber;
const int Motion_Recognition::kStoreImageFieldNumber;
const int Motion_Recognition::kSendAmountFieldNumber;
const int Motion_Recognition::kSendFilePathFieldNumber;
const int Motion_Recognition::kAmountFieldNumber;
const int Motion_Recognition::kFilePathFieldNumber;
#endif  // !_MSC_VER

Motion_Recognition::Motion_Recognition()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:detection.Motion.Recognition)
}

void Motion_Recognition::InitAsDefaultInstance() {
}

Motion_Recognition::Motion_Recognition(const Motion_Recognition& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:detection.Motion.Recognition)
}

void Motion_Recognition::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  instance_ = 0;
  storeimage_ = false;
  sendamount_ = false;
  sendfilepath_ = false;
  amount_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  filepath_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Motion_Recognition::~Motion_Recognition() {
  // @@protoc_insertion_point(destructor:detection.Motion.Recognition)
  SharedDtor();
}

void Motion_Recognition::SharedDtor() {
  if (amount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete amount_;
  }
  if (filepath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete filepath_;
  }
  if (this != default_instance_) {
  }
}

void Motion_Recognition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Motion_Recognition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Motion_Recognition_descriptor_;
}

const Motion_Recognition& Motion_Recognition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_motion_5fprotocol_2eproto();
  return *default_instance_;
}

Motion_Recognition* Motion_Recognition::default_instance_ = NULL;

Motion_Recognition* Motion_Recognition::New() const {
  return new Motion_Recognition;
}

void Motion_Recognition::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Motion_Recognition*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(instance_, sendfilepath_);
    if (has_amount()) {
      if (amount_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        amount_->clear();
      }
    }
    if (has_filepath()) {
      if (filepath_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        filepath_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Motion_Recognition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:detection.Motion.Recognition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 instance = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &instance_)));
          set_has_instance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_storeImage;
        break;
      }

      // optional bool storeImage = 2;
      case 2: {
        if (tag == 16) {
         parse_storeImage:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &storeimage_)));
          set_has_storeimage();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_sendAmount;
        break;
      }

      // optional bool sendAmount = 3;
      case 3: {
        if (tag == 24) {
         parse_sendAmount:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sendamount_)));
          set_has_sendamount();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_sendFilePath;
        break;
      }

      // optional bool sendFilePath = 4;
      case 4: {
        if (tag == 32) {
         parse_sendFilePath:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sendfilepath_)));
          set_has_sendfilepath();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_amount;
        break;
      }

      // optional string amount = 5;
      case 5: {
        if (tag == 42) {
         parse_amount:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_amount()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->amount().data(), this->amount().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "amount");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_filePath;
        break;
      }

      // optional string filePath = 6;
      case 6: {
        if (tag == 50) {
         parse_filePath:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_filepath()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filepath().data(), this->filepath().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "filepath");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:detection.Motion.Recognition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:detection.Motion.Recognition)
  return false;
#undef DO_
}

void Motion_Recognition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:detection.Motion.Recognition)
  // required int32 instance = 1;
  if (has_instance()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->instance(), output);
  }

  // optional bool storeImage = 2;
  if (has_storeimage()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->storeimage(), output);
  }

  // optional bool sendAmount = 3;
  if (has_sendamount()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->sendamount(), output);
  }

  // optional bool sendFilePath = 4;
  if (has_sendfilepath()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->sendfilepath(), output);
  }

  // optional string amount = 5;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->amount().data(), this->amount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "amount");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->amount(), output);
  }

  // optional string filePath = 6;
  if (has_filepath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filepath().data(), this->filepath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filepath");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->filepath(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:detection.Motion.Recognition)
}

::google::protobuf::uint8* Motion_Recognition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:detection.Motion.Recognition)
  // required int32 instance = 1;
  if (has_instance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->instance(), target);
  }

  // optional bool storeImage = 2;
  if (has_storeimage()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->storeimage(), target);
  }

  // optional bool sendAmount = 3;
  if (has_sendamount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->sendamount(), target);
  }

  // optional bool sendFilePath = 4;
  if (has_sendfilepath()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->sendfilepath(), target);
  }

  // optional string amount = 5;
  if (has_amount()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->amount().data(), this->amount().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "amount");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->amount(), target);
  }

  // optional string filePath = 6;
  if (has_filepath()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filepath().data(), this->filepath().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "filepath");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->filepath(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:detection.Motion.Recognition)
  return target;
}

int Motion_Recognition::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 instance = 1;
    if (has_instance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->instance());
    }

    // optional bool storeImage = 2;
    if (has_storeimage()) {
      total_size += 1 + 1;
    }

    // optional bool sendAmount = 3;
    if (has_sendamount()) {
      total_size += 1 + 1;
    }

    // optional bool sendFilePath = 4;
    if (has_sendfilepath()) {
      total_size += 1 + 1;
    }

    // optional string amount = 5;
    if (has_amount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->amount());
    }

    // optional string filePath = 6;
    if (has_filepath()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->filepath());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Motion_Recognition::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Motion_Recognition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Motion_Recognition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Motion_Recognition::MergeFrom(const Motion_Recognition& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_instance()) {
      set_instance(from.instance());
    }
    if (from.has_storeimage()) {
      set_storeimage(from.storeimage());
    }
    if (from.has_sendamount()) {
      set_sendamount(from.sendamount());
    }
    if (from.has_sendfilepath()) {
      set_sendfilepath(from.sendfilepath());
    }
    if (from.has_amount()) {
      set_amount(from.amount());
    }
    if (from.has_filepath()) {
      set_filepath(from.filepath());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Motion_Recognition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Motion_Recognition::CopyFrom(const Motion_Recognition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Motion_Recognition::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Motion_Recognition::Swap(Motion_Recognition* other) {
  if (other != this) {
    std::swap(instance_, other->instance_);
    std::swap(storeimage_, other->storeimage_);
    std::swap(sendamount_, other->sendamount_);
    std::swap(sendfilepath_, other->sendfilepath_);
    std::swap(amount_, other->amount_);
    std::swap(filepath_, other->filepath_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Motion_Recognition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Motion_Recognition_descriptor_;
  metadata.reflection = Motion_Recognition_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Motion_Instance::kIdInstanceFieldNumber;
const int Motion_Instance::kStartFieldNumber;
const int Motion_Instance::kEndFieldNumber;
#endif  // !_MSC_VER

Motion_Instance::Motion_Instance()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:detection.Motion.Instance)
}

void Motion_Instance::InitAsDefaultInstance() {
}

Motion_Instance::Motion_Instance(const Motion_Instance& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:detection.Motion.Instance)
}

void Motion_Instance::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  idinstance_ = 0;
  start_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  end_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Motion_Instance::~Motion_Instance() {
  // @@protoc_insertion_point(destructor:detection.Motion.Instance)
  SharedDtor();
}

void Motion_Instance::SharedDtor() {
  if (start_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete start_;
  }
  if (end_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete end_;
  }
  if (this != default_instance_) {
  }
}

void Motion_Instance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Motion_Instance::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Motion_Instance_descriptor_;
}

const Motion_Instance& Motion_Instance::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_motion_5fprotocol_2eproto();
  return *default_instance_;
}

Motion_Instance* Motion_Instance::default_instance_ = NULL;

Motion_Instance* Motion_Instance::New() const {
  return new Motion_Instance;
}

void Motion_Instance::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    idinstance_ = 0;
    if (has_start()) {
      if (start_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        start_->clear();
      }
    }
    if (has_end()) {
      if (end_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        end_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Motion_Instance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:detection.Motion.Instance)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 idInstance = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &idinstance_)));
          set_has_idinstance();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_start;
        break;
      }

      // required string start = 2;
      case 2: {
        if (tag == 18) {
         parse_start:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_start()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->start().data(), this->start().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "start");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_end;
        break;
      }

      // required string end = 3;
      case 3: {
        if (tag == 26) {
         parse_end:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_end()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->end().data(), this->end().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "end");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:detection.Motion.Instance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:detection.Motion.Instance)
  return false;
#undef DO_
}

void Motion_Instance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:detection.Motion.Instance)
  // required int32 idInstance = 1;
  if (has_idinstance()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->idinstance(), output);
  }

  // required string start = 2;
  if (has_start()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->start().data(), this->start().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "start");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->start(), output);
  }

  // required string end = 3;
  if (has_end()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->end().data(), this->end().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "end");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->end(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:detection.Motion.Instance)
}

::google::protobuf::uint8* Motion_Instance::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:detection.Motion.Instance)
  // required int32 idInstance = 1;
  if (has_idinstance()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->idinstance(), target);
  }

  // required string start = 2;
  if (has_start()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->start().data(), this->start().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "start");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->start(), target);
  }

  // required string end = 3;
  if (has_end()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->end().data(), this->end().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "end");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->end(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:detection.Motion.Instance)
  return target;
}

int Motion_Instance::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 idInstance = 1;
    if (has_idinstance()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->idinstance());
    }

    // required string start = 2;
    if (has_start()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->start());
    }

    // required string end = 3;
    if (has_end()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->end());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Motion_Instance::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Motion_Instance* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Motion_Instance*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Motion_Instance::MergeFrom(const Motion_Instance& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_idinstance()) {
      set_idinstance(from.idinstance());
    }
    if (from.has_start()) {
      set_start(from.start());
    }
    if (from.has_end()) {
      set_end(from.end());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Motion_Instance::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Motion_Instance::CopyFrom(const Motion_Instance& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Motion_Instance::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void Motion_Instance::Swap(Motion_Instance* other) {
  if (other != this) {
    std::swap(idinstance_, other->idinstance_);
    std::swap(start_, other->start_);
    std::swap(end_, other->end_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Motion_Instance::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Motion_Instance_descriptor_;
  metadata.reflection = Motion_Instance_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Motion::kIdMotionFieldNumber;
const int Motion::kTimeFieldNumber;
const int Motion::kCodeFieldNumber;
const int Motion::kActionFieldNumber;
const int Motion::kInstanceFieldNumber;
#endif  // !_MSC_VER

Motion::Motion()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:detection.Motion)
}

void Motion::InitAsDefaultInstance() {
}

Motion::Motion(const Motion& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:detection.Motion)
}

void Motion::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  idmotion_ = 0;
  time_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Motion::~Motion() {
  // @@protoc_insertion_point(destructor:detection.Motion)
  SharedDtor();
}

void Motion::SharedDtor() {
  if (time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete time_;
  }
  if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete code_;
  }
  if (this != default_instance_) {
  }
}

void Motion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Motion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Motion_descriptor_;
}

const Motion& Motion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_motion_5fprotocol_2eproto();
  return *default_instance_;
}

Motion* Motion::default_instance_ = NULL;

Motion* Motion::New() const {
  return new Motion;
}

void Motion::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    idmotion_ = 0;
    if (has_time()) {
      if (time_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        time_->clear();
      }
    }
    if (has_code()) {
      if (code_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        code_->clear();
      }
    }
  }
  action_.Clear();
  instance_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Motion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:detection.Motion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 idMotion = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &idmotion_)));
          set_has_idmotion();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_time;
        break;
      }

      // optional string time = 2;
      case 2: {
        if (tag == 18) {
         parse_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->time().data(), this->time().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "time");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_code;
        break;
      }

      // optional string code = 3;
      case 3: {
        if (tag == 26) {
         parse_code:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_code()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->code().data(), this->code().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "code");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_action;
        break;
      }

      // repeated .detection.Motion.Action action = 4;
      case 4: {
        if (tag == 34) {
         parse_action:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_action()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_action;
        if (input->ExpectTag(42)) goto parse_instance;
        break;
      }

      // repeated .detection.Motion.Instance instance = 5;
      case 5: {
        if (tag == 42) {
         parse_instance:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_instance()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_instance;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:detection.Motion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:detection.Motion)
  return false;
#undef DO_
}

void Motion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:detection.Motion)
  // required int32 idMotion = 1;
  if (has_idmotion()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->idmotion(), output);
  }

  // optional string time = 2;
  if (has_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->time(), output);
  }

  // optional string code = 3;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->code(), output);
  }

  // repeated .detection.Motion.Action action = 4;
  for (int i = 0; i < this->action_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->action(i), output);
  }

  // repeated .detection.Motion.Instance instance = 5;
  for (int i = 0; i < this->instance_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->instance(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:detection.Motion)
}

::google::protobuf::uint8* Motion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:detection.Motion)
  // required int32 idMotion = 1;
  if (has_idmotion()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->idmotion(), target);
  }

  // optional string time = 2;
  if (has_time()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->time(), target);
  }

  // optional string code = 3;
  if (has_code()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->code().data(), this->code().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->code(), target);
  }

  // repeated .detection.Motion.Action action = 4;
  for (int i = 0; i < this->action_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->action(i), target);
  }

  // repeated .detection.Motion.Instance instance = 5;
  for (int i = 0; i < this->instance_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->instance(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:detection.Motion)
  return target;
}

int Motion::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 idMotion = 1;
    if (has_idmotion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->idmotion());
    }

    // optional string time = 2;
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->time());
    }

    // optional string code = 3;
    if (has_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->code());
    }

  }
  // repeated .detection.Motion.Action action = 4;
  total_size += 1 * this->action_size();
  for (int i = 0; i < this->action_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->action(i));
  }

  // repeated .detection.Motion.Instance instance = 5;
  total_size += 1 * this->instance_size();
  for (int i = 0; i < this->instance_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->instance(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Motion::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Motion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Motion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Motion::MergeFrom(const Motion& from) {
  GOOGLE_CHECK_NE(&from, this);
  action_.MergeFrom(from.action_);
  instance_.MergeFrom(from.instance_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_idmotion()) {
      set_idmotion(from.idmotion());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
    if (from.has_code()) {
      set_code(from.code());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Motion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Motion::CopyFrom(const Motion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Motion::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->action())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->instance())) return false;
  return true;
}

void Motion::Swap(Motion* other) {
  if (other != this) {
    std::swap(idmotion_, other->idmotion_);
    std::swap(time_, other->time_);
    std::swap(code_, other->code_);
    action_.Swap(&other->action_);
    instance_.Swap(&other->instance_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Motion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Motion_descriptor_;
  metadata.reflection = Motion_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Message::kMotionFieldNumber;
#endif  // !_MSC_VER

Message::Message()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:detection.Message)
}

void Message::InitAsDefaultInstance() {
}

Message::Message(const Message& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:detection.Message)
}

void Message::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:detection.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_descriptor_;
}

const Message& Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_motion_5fprotocol_2eproto();
  return *default_instance_;
}

Message* Message::default_instance_ = NULL;

Message* Message::New() const {
  return new Message;
}

void Message::Clear() {
  motion_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:detection.Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .detection.Motion motion = 1;
      case 1: {
        if (tag == 10) {
         parse_motion:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_motion()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_motion;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:detection.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:detection.Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:detection.Message)
  // repeated .detection.Motion motion = 1;
  for (int i = 0; i < this->motion_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->motion(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:detection.Message)
}

::google::protobuf::uint8* Message::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:detection.Message)
  // repeated .detection.Motion motion = 1;
  for (int i = 0; i < this->motion_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->motion(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:detection.Message)
  return target;
}

int Message::ByteSize() const {
  int total_size = 0;

  // repeated .detection.Motion motion = 1;
  total_size += 1 * this->motion_size();
  for (int i = 0; i < this->motion_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->motion(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Message* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Message*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  motion_.MergeFrom(from.motion_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->motion())) return false;
  return true;
}

void Message::Swap(Message* other) {
  if (other != this) {
    motion_.Swap(&other->motion_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Message_descriptor_;
  metadata.reflection = Message_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace detection

// @@protoc_insertion_point(global_scope)
